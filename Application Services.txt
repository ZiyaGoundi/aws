
ECR : Elastic Containers Repository : Place to store container images.
ECS : Elastic Container Service : 

1. Install docker in your local laptop
2. Install aws cli tools and configure an IAM user. (aws configure)

ECR process : 
1. Connect to the repo
2. build "docker build -t imagename ."
3. Tagging "docker tag imagename:latest"
4. Push it "docker push URI/imagename:latest"


Fargate : Fully managed by AWS. No backend instance, AWS manages everything.
EC2 : we will get an instance, COnstainers runs within instance, We can login and perform os level operations.
ECS Anywhere : We can install ecs agent on our own hardware, and deliver our application.


Task Defination : Task definitions specify the container information for your application, such as how many containers are part of your task, what resources they will use, how they are linked together, and which host ports they will use.


** https://ecsworkshop.com/
https://eksworkshop.com/
https://www.youtube.com/containersfromthecouch
https://kodekloud.com/courses/docker-for-the-absolute-beginner/
https://www.youtube.com/watch?v=fqMOX6JJhGo
Terraform : https://www.youtube.com/watch?v=iRaai1IBlB0
Ansible: Refer youtube channel.


Task : Launch amazon linux 2 ec2 instance, Install docker and start the service. verify docker version

--> Pull nginx docker image from dockerHub and run it and deliver the webpage.
--> Pull httpd docker image from dockerHub and run it on diff port.

Am sharing, Docker file to prepare your own nginx docker image. Create an index.html along with Dockerfile. 
Prepare a docker image and run it locally.


ECS : 
--> fargate : AWS managed , Serverless
--> ec2 
--> ECS anywhere

Task Definition : Settings or configuration of our task. 
	--> Where is the Image you want to run
	--> Confiration required for your image (cpu, memory, storage, logs)


Task : Run nodejs application and nginx as a service/task on ecs cluster. Refer the github link for dockerfiles.

-> Create a Service with multiple tasks and Integrate with Load Balancer.


=========================================================================



